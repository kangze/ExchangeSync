// <auto-generated />
using System;
using ExchangeSync.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ExchangeSync.Model.Migrations
{
    [DbContext(typeof(ServiceDbContext))]
    [Migration("20191024090012_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ExchangeSync.Model.EnterpiseContactModel.Department", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("DataSourceType");

                    b.Property<int?>("IconId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.Property<Guid?>("ParentId");

                    b.Property<int>("Sort");

                    b.Property<int>("TypeId");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.HasIndex("ParentId");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("ExchangeSync.Model.EnterpiseContactModel.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Avatar");

                    b.Property<int>("DataSourceType");

                    b.Property<int>("Gender");

                    b.Property<string>("IdCardNo")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.Property<string>("Mobile")
                        .HasMaxLength(128);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.Property<string>("OpenId")
                        .HasMaxLength(128);

                    b.Property<string>("Password");

                    b.Property<Guid>("PrimaryDepartmentId");

                    b.Property<Guid>("PrimaryPositionId");

                    b.Property<Guid?>("UserId");

                    b.Property<string>("UserName")
                        .HasMaxLength(128);

                    b.HasKey("Id");

                    b.HasIndex("IdCardNo");

                    b.HasIndex("Number");

                    b.HasIndex("PrimaryDepartmentId");

                    b.HasIndex("UserId");

                    b.HasIndex("UserName");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("ExchangeSync.Model.EnterpiseContactModel.EmployeeAuth", b =>
                {
                    b.Property<string>("Number")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("IdCardNo");

                    b.Property<string>("OpenId");

                    b.Property<string>("Password");

                    b.HasKey("Number");

                    b.ToTable("EmployeeAuths");
                });

            modelBuilder.Entity("ExchangeSync.Model.EnterpiseContactModel.EmployeePosition", b =>
                {
                    b.Property<Guid>("EmployeeId");

                    b.Property<Guid>("PositionId");

                    b.Property<int>("DataSourceType");

                    b.Property<bool>("IsPrimary");

                    b.HasKey("EmployeeId", "PositionId");

                    b.HasIndex("PositionId");

                    b.ToTable("EmployeePositions");
                });

            modelBuilder.Entity("ExchangeSync.Model.EnterpiseContactModel.Position", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("DataSourceType");

                    b.Property<Guid>("DepartmentId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Positions");
                });

            modelBuilder.Entity("ExchangeSync.Model.EnterpiseContactModel.Department", b =>
                {
                    b.HasOne("ExchangeSync.Model.EnterpiseContactModel.Department", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentId");
                });

            modelBuilder.Entity("ExchangeSync.Model.EnterpiseContactModel.EmployeePosition", b =>
                {
                    b.HasOne("ExchangeSync.Model.EnterpiseContactModel.Employee", "Employee")
                        .WithMany("Positions")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ExchangeSync.Model.EnterpiseContactModel.Position", "Position")
                        .WithMany()
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ExchangeSync.Model.EnterpiseContactModel.Position", b =>
                {
                    b.HasOne("ExchangeSync.Model.EnterpiseContactModel.Department", "Department")
                        .WithMany("Positions")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
